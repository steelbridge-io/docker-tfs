version: '3.3'

services:
  # Defines a 'db' service
  db:
    # Specifies the platform on which the service will run
    platform: linux/amd64
    # Specifies the Docker image to use for the 'db' service
    image: mariadb:10.5
    # Defines the volume for persisting the database data
    volumes:
      - db_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    # Ensures the service is always restarted by Docker
    restart: always
    # Specifies environment variables which are required by the mysql image
    environment:
      # Root password for the MySQL instance
      MYSQL_ROOT_PASSWORD: somewordpress
      # The name of the database
      MYSQL_DATABASE: wordpress
      # The username for WordPress to connect to MySQL
      MYSQL_USER: wordpress
      # The password for this user
      MYSQL_PASSWORD: wordpress

  wordpress:
    platform: linux/amd64
    depends_on:
      - db
    image: wordpress:latest
    ports:
      - "80:80"
    restart: always
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_TABLE_PREFIX: mswp_
      WORDPRESS_DEBUG: true

    volumes:
      - ./wordpress:/var/www/html
    command: bash -c "echo 'memory_limit = 1024M' >> /usr/local/etc/php/conf.d/memory-limit.ini && apache2-foreground"


  wpcli:
    platform: linux/amd64
    depends_on:
      - wordpress
      - db
    image: wordpress:cli
    volumes:
      - ./wordpress:/var/www/html
    user: www-data
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_TABLE_PREFIX: mswp_

  phpmyadmin:
    platform: linux/amd64
    image: phpmyadmin/phpmyadmin
    links:
      - db
    environment:
      PMA_HOST: db
      PMA_USER: root
      PMA_PASSWORD: somewordpress
    ports:
      - 8082:80

volumes:
  db_data: {}
